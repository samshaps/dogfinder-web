name: CI/CD Pipeline

on:
  push:
    branches: [main, staging, develop]
  pull_request:
    branches: [main]

jobs:
  frontend-checks:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./frontend
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run ESLint
        run: npm run lint -- --max-warnings 0
        
      - name: Run TypeScript check
        run: npm run type-check
        
      - name: Build application
        run: npm run build
        env:
          NEXT_PUBLIC_API_BASE: https://dogfinder-web-staging.onrender.com

  backend-checks:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./backend
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest black flake8
          
      - name: Run Black (formatting check)
        run: black --check --diff . || echo "Black formatting not enforced yet"
          continue-on-error: true
        
      - name: Run Flake8 (linting)
        run: flake8 . || echo "Flake8 not fully configured yet"
          continue-on-error: true
        
      - name: Check if app starts correctly
        run: |
          python -c "import app; print('App imports successfully')"

  deployment-staging:
    if: github.ref == 'refs/heads/staging' && github.event_name == 'push'
    needs: [frontend-checks, backend-checks]
    runs-on: ubuntu-latest
    
    steps:
      - name: Deploy Staging Notification
        run: |
          echo "ðŸš€ Staging deployment triggered"
          echo "Frontend will deploy to: staging.dogyenta.com"
          echo "Backend will deploy to: dogfinder-web-staging.onrender.com"
          echo "Both should auto-deploy from 'staging' branch"

  deployment-production:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: [frontend-checks, backend-checks]
    runs-on: ubuntu-latest
    
    steps:
      - name: Deploy Production Notification
        run: |
          echo "ðŸŽ¯ Production deployment triggered"
          echo "Frontend: dogyenta.com"
          echo "Backend: dogfinder-web.onrender.com"
          echo "Deployment should happen automatically"
